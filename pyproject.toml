[tool.black]
line-length = 79
target-version = ['py311']
include = '\.py?$'
exclude = '''
/(
  | \.coverage
  | \.DS_Store
  |  \.eggs
  | \.git
  | \.hg
  | \.log
  | \.mypy_cache
  | \.tox
  | \.venv
  | db.sqlite3
  | _build
  | __pycache__
  | buck-out
  | build
  | dist
  | fixtures
  | htmlcov
  | migrations
  | node_modules
  | static
  | templates
  | venv
  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''

[tool.isort]
profile = "black"
skip = ["docs", "migrations", "node_modules", "tests", "venv"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --cov-report html"
markers = [
    "docker: marks tests as docker-dependent",
]
DJANGO_SETTINGS_MODULE = "xmark.settings.test"

[tool.coverage.run]
source = []
omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:"
]
show_missing = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".coverage",
    ".direnv",
    ".DS_Store",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".log",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "__pycache__",
    "_build",
    "blib2to3",
    "buck-out",
    "build",
    "db.sqlite3",
    "dist",
    "fixtures",
    "htmlcov",
    "migrations",
    "node_modules",
    "profiling",
    "static",
    "templates",
    "tests/data",
    "venv",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Same as Black.
indent-width = 4
line-length = 79
# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    # flake8-annotations
    "ANN",
    # flake8-bugbear
    "B",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    # pyflakes
    "F",
    # PEP8-naming
    "N",
    # flake8-datetimes
    "DTZ",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # flake8-bandit
    "S",
    # flake8-django
    "DJ",
    # flake8-pytest-style
    "PT",
    # isort
    "I"
]
# Ignore pydocstyle rules not relevant to pep 257
# Ignore recommended rules:
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
    "ANN101",
    "D203",
    "D206",
    "D212",
    "D213",
    "D214",
    "D215",
    "D300",
    "D404",
    "D405",
    "D406",
    "D407",
    "D408",
    "D409",
    "D410",
    "D411",
    "D413",
    "D415",
    "D416",
    "D417",
    "E111",
    "E114",
    "E117"
]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.per-file-ignores]
# Ignore errors on use of assert in tests
"tests/*" = ["S101"]

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 5.
max-complexity = 5